// prosemirror-keymap@1.2.3 downloaded from https://ga.jspm.io/npm:prosemirror-keymap@1.2.3/dist/index.js

import{keyName as t,base as e}from"w3c-keyname";import{Plugin as r}from"prosemirror-state";const n=typeof navigator!="undefined"&&/Mac|iP(hone|[oa]d)/.test(navigator.platform);const i=typeof navigator!="undefined"&&/Win/.test(navigator.platform);function l(t){let e=t.split(/-(?!$)/),r=e[e.length-1];r=="Space"&&(r=" ");let i,l,o,a;for(let t=0;t<e.length-1;t++){let r=e[t];if(/^(cmd|meta|m)$/i.test(r))a=true;else if(/^a(lt)?$/i.test(r))i=true;else if(/^(c|ctrl|control)$/i.test(r))l=true;else if(/^s(hift)?$/i.test(r))o=true;else{if(!/^mod$/i.test(r))throw new Error("Unrecognized modifier name: "+r);n?a=true:l=true}}i&&(r="Alt-"+r);l&&(r="Ctrl-"+r);a&&(r="Meta-"+r);o&&(r="Shift-"+r);return r}function o(t){let e=Object.create(null);for(let r in t)e[l(r)]=t[r];return e}function a(t,e,r=true){e.altKey&&(t="Alt-"+t);e.ctrlKey&&(t="Ctrl-"+t);e.metaKey&&(t="Meta-"+t);r&&e.shiftKey&&(t="Shift-"+t);return t}function f(t){return new r({props:{handleKeyDown:s(t)}})}function s(r){let n=o(r);return function(r,l){let o,f=t(l),s=n[a(f,l)];if(s&&s(r.state,r.dispatch,r))return true;if(f.length==1&&f!=" "){if(l.shiftKey){let t=n[a(f,l,false)];if(t&&t(r.state,r.dispatch,r))return true}if((l.altKey||l.metaKey||l.ctrlKey)&&!(i&&l.ctrlKey&&l.altKey)&&(o=e[l.keyCode])&&o!=f){let t=n[a(o,l)];if(t&&t(r.state,r.dispatch,r))return true}}return false}}export{s as keydownHandler,f as keymap};

